#0320
#module gene enrichment for disease and apoptosis gene
source("fisher_overlap.R")
library(ggplot2)
library(rshape2)
library(gplots)

a<-read.csv("DiseaseGeneList.csv",header=T)
#在最后一行存了细胞凋亡的相关基因
table.p<-matrix(NA,nrow=2,ncol=dim(a)[2])
rownames(table.p)<-c("module turquoise","module blue")
colnames(table.p)<-colnames(a)
table.or<-table.p
tur<-read.table("clipboard",header=F) #3555 turquoise genes
blue<-read.table("clipboard",header=F) #2279 blue genes
all<-read.table("clipboard",header=F) #9943 all genes
rush_turquoise<-tur[,1]
stanley_blue<-blue[,1]
all_gene<-all[,1]

b<-union(a[,1],a[,2])
for (e in names(a)){
b<-union(b,a[,e][which(a[,e]!="")])
}
length(b)
#[1] 8093


#rush_turquoise ORA
for (e in names(a)) {
#for(e in (colnames(table.p))){
f <- ORA(a[,e][which(a[,e]!="")],rush_turquoise,b,all_gene)
table.or[1,e] = as.numeric(f[[1]])
table.p[1,e] = as.numeric(f[[2]])
#table.ov[1,e] = as.numeric(f[[5]])
#}
}
#stanley_blue ORA
for (e in names(a)) {
#for(e in (colnames(table.p))){
g <- ORA(a[,e][which(a[,e]!="")],stanley_blue,b,all_gene)
table.or[2,e] = as.numeric(g[[1]])
table.p[2,e] = as.numeric(g[[2]])
#table.ov[1,e] = as.numeric(f[[5]])
#}
}

table.p.fdr = p.adjust(table.p,"fdr")
dim(table.p.fdr) = dim(table.p)
dimnames(table.p.fdr) = dimnames(table.p)
table.p.fdr1[table.or<1] = 1

#to_plot = as.data.frame(table.p.fdr)
cy<-as.data.frame(melt(t(table.p.fdr)))
colnames(cy)<-c("Var1","modules","value")
               # Var1             modules        value
# 1  ASD_G_candidates module turquoise 3.187257e-01
# 2 ASD_G_FMRPTargets module turquoise 6.913767e-09
# 3     ASD_G_Mis3DNM module turquoise 1.000000e+00
# 4      ASD_G_LoFDNM module turquoise 7.992135e-01
# 5   ASD_E_DEUpArray module turquoise 1.000000e+00
# 6 ASD_E_DEDownArray module turquoise 3.872034e-88

pdf("module_disorder_ORA.pdf")
ggplot(data=cy,mapping=aes(x=Var1,y=-log10(value),fill=modules))+geom_bar(stat="identity",position="dodge")+ ggtitle("module Disorders Genes ORA") + theme_classic() + geom_abline(intercept=-log10(0.05),slope=0,lty=2) + labs(x="Disease Data Source",y="-log10(P.fdr)") + theme(axis.text.x=element_text(angle=55, size=10, hjust=1))
dev.off()


#heatmap.2(-log10(to_plot),col=blueWhiteRed(1000,1)[500:1000])
