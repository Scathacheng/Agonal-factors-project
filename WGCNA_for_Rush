#20190305
#agonal factors
#重复RUSH的数据
#这次用537个样本，校正疾病状态的方法来做


setwd("03R/07death_state/20190305_r/")
library(WGCNA)
library(preprocessCore)
options(stringsAsFactors = FALSE)

d<-load("rush_agonal541.RData")
datMeta<-read.csv("sample537.csv",header=T,row.names=1)
datlog<-log2(data+1)
datExpr<-t(datlog)
datExpr<-datExpr[,rownames(datMeta)]


mm<-model.matrix(~-1+datMeta$msex+datMeta$race+datMeta$spanish+datMeta$educ+datMeta$age_death+datMeta$cogdx+datMeta$pmi+datMeta$alcohol_g_bl+datMeta$smoking)
z<-apply(datExpr,1,function(x){residuals(lm(x~mm))})
tz<-t(z)
datExpr2<-tz+rowMeans(datExpr)
datExpr2<-normalize.quantiles(datExpr2)
dimnames(datExpr2)<-dimnames(datExpr)

#cluster
sampleTree = hclust(dist(t(datExpr2)), method = "average")
pdf("sampleClustering.pdf",width=12,height=9)
par(cex = 0.6);
par(mar = c(0,4,2,0))
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5, 
      cex.axis = 1.5, cex.main = 2)
abline(h = 120, col = "red")
dev.off()

clust = cutreeStatic(sampleTree, cutHeight = 120, minSize = 10)
table(clust)
keepSamples=(clust==1)
datExpr2<-datExpr2[,keepSamples]
nGenes=nrow(datExpr2)
nSamples=ncol(datExpr2)
datMeta<-datMeta[keepSamples,]
save(datExpr2,datMeta,file="rush_data0305.RData")
#PVCA


#WGCNA
enableWGCNAThreads()
powers = c(c(1:10), seq(from = 12, to=20, by=2))
sft = pickSoftThreshold(t(datExpr2), powerVector = powers, networkType="signed", verbose = 5)
pdf("rush_powerselect.pdf")
par(mfrow = c(1,2))
cex1 = 0.9
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",main = paste("Scale independence"))
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],labels=powers,cex=cex1,col="red")
abline(h=0.90,col="red")
plot(sft$fitIndices[,1], sft$fitIndices[,5],xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
dev.off()

net<- blockwiseModules(t(datExpr2), power = 12, networkType = "signed", TOMType ="unsigned", corType="pearson", maxBlockSize=20000, maxModuleSize =4000, minModuleSize =30, reassignThreshold = 0, mergeCutHeight = 0.25, numericLabels = TRUE, pamRespectsDendro = FALSE, saveTOMs = TRUE, saveTOMFileBase ="agonal_status" , verbose = 3)
table(net$colors)

moduleLabels = net$colors
moduleColors = labels2colors(net$colors)
MEs = net$MEs
geneTree = net$dendrograms[[1]]
save(MEs, moduleLabels, moduleColors, geneTree, datExpr2, net, file="rush-net-data0305.RData")

pdf("rush-WGCNA.pdf")
plotDendroAndColors(net$dendrograms[[1]], moduleColors[net$blockGenes[[1]]],
                    "Module colors",
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05)
dev.off()
table<-net$colors
informatio<-data.frame(gene=rownames(datExpr2),module=table,color=labels2colors(net$colors))
dim(informatio)
write.csv(informatio,file="rush-geneinfo.csv")

nGenes=nrow(datExpr2)
nSamples=ncol(datExpr2)
MEs0 = moduleEigengenes(t(datExpr2), moduleColors)$eigengenes
MEs = orderMEs(MEs0)
geneModulesMembership=as.data.frame(cor(t(datExpr2),MEs,use="p"))
MMPvalue=as.data.frame(corPvalueStudent(as.matrix(geneModulesMembership),nSamples))
write.csv(MMPvalue,file="rush-MMPvalue.csv")
write.csv(geneModulesMembership,file="rush-MM.csv")

moduleTraitCor=cor(MEs,datMeta,use="p")
moduleTraitPvalue=corPvalueFisher(moduleTraitCor,nSamples)
q<-p.adjust(moduleTraitPvalue,method="fdr")
dim(q)<-dim(moduleTraitPvalue)
dimnames(q)<-dimnames(moduleTraitPvalue)

textMatrix =  paste(signif(moduleTraitCor, 2), "\n(",
                           signif(q, 1), ")", sep = "")
pdf("rush-heatmap.pdf")
par(mar = c(6, 8.5, 3, 3))
labeledHeatmap(Matrix = moduleTraitCor,
               xLabels = names(datMeta),
               yLabels = names(MEs),
               ySymbols = names(MEs),
               colorLabels = FALSE,
               colors = greenWhiteRed(50),
               textMatrix = textMatrix,
               setStdMargins = FALSE,
               cex.text = 0.5,
               zlim = c(-1,1),
               main = paste("Module-trait relationships"))
dev.off()

#cell-type
b<-load("rush-net-data0305.RData")
colors = vector(mode="list")
colors<-moduleColors
MEs = moduleEigengenes(expr = t(datExpr2), colors, softPower = 12)
eigmat = MEs$eigengenes
colnames(eigmat) = gsub("ME","",colnames(eigmat))


zhang.datExpr = read.csv("datExpr.zhangHuman.avgForPSI.csv",row.names=1)[,-1]
set.seed(100)
pSI.output = specificity.index(pSI.in=zhang.datExpr,bts=100,p_max=.1, e_min=0.3) 
pSI.count(pSI.output)

cell.p.zhang = matrix(NA, 15,5)
rownames(cell.p.zhang) = unique(colors)
colnames(cell.p.zhang) = colnames(pSI.output)

#datExpr2的rownames和pSI的不匹配，需要重读一个
for(mod in rownames(cell.p.zhang)) {
    f = fisher.iteration(pSI.output, rownames(datExpr2)[colors==mod],p.adjust = F)
    cell.p.zhang[mod,] = f$`0.05 - nominal`
}

cell.p.zhang.fdr = p.adjust(cell.p.zhang,"fdr")
dim(cell.p.zhang.fdr) = dim(cell.p.zhang)
dimnames(cell.p.zhang.fdr) = dimnames(cell.p.zhang);
to_plot = cell.p.zhang.fdr[c("turquoise", "yellow", "blue", "salmon", "brown", "cyan", "tan","pink","black","purple","red","greenyellow","green","magenta","grey"),]


dendro.col = as.dendrogram(hclust(as.dist(1-bicor(zhang.datExpr)), method="average"))
denro.row= as.dendrogram(hclust(as.dist(1-bicor(eigmat[,c("turquoise", "yellow", "blue", "salmon", "brown", "cyan", "tan","pink","black","purple","red","greenyellow","green","magenta","grey")])),method="average"))

pdf("CellType-rush.pdf",width=6,height=5)
heatmap.2(-log10(to_plot),col=blueWhiteRed(1000,1)[500:1000],
          scale="none",trace="none",cexRow = 0.8,cexCol = .8, density.info = "none",
          colsep=0:7,rowsep=0:8,sepcolor="grey",sepwidth=c(0.02,0.02),
          srtCol=45,offsetRow=0,offsetCol=-0.5,
          Rowv=denro.row, Colv=dendro.col,
          key=T,key.xlab="-log10(P)", cellnote=signif(to_plot,1), notecex=.8, notecol="black",main="Enrichment")
dev.off()

